/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import ArrayManipulator.ArrayManipulator;
import CSVIO.CSVWriter;
import MFCCFeatureExtraction.FeatureExtraction;
import MFCCFeatureExtraction.SpeechProcessing;
import WavFileProcessor.ReadWav;
import java.io.File;
import java.io.FileWriter;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author DAN
 */
public class HalamanEkstraksiCiri extends javax.swing.JFrame {
    double EP,SP;
    int CF, koefisienMFCC;

    /**
     * Creates new form HalamanEkstraksiCiri
     */
    public HalamanEkstraksiCiri() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        btnDetilMFCC = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        txtAreaFolderLocation = new javax.swing.JTextField();
        btnExtract = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtAreaCF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAreaCSVTarget = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        textAreaMFCCCoefficient = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("MFCC Feature Extraction");

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnDetilMFCC.setText("Detil MFCC");
        btnDetilMFCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetilMFCCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnHome)
                .addGap(206, 206, 206)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDetilMFCC, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(btnDetilMFCC, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Insert folderpath which contain .wav file to be extracted");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        txtAreaFolderLocation.setText("E:\\_REKAMAN\\datasetBaru\\Icip");

        btnExtract.setText("Extract with MFCC");
        btnExtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtractActionPerformed(evt);
            }
        });

        jLabel3.setText("Considered Frame");

        jLabel4.setText("Start Frame (SP)");

        jSlider1.setMajorTickSpacing(10);
        jSlider1.setMaximum(50);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setToolTipText("adf");
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("-");

        jLabel6.setText("-");

        jLabel7.setText("CSV File Target (with filepath) ");

        jLabel8.setText("SP");

        jLabel9.setText("EP");

        jLabel10.setText("No. of MFCC Coefficient");

        textAreaMFCCCoefficient.setText("12");

        jButton1.setText("Browse File");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnExtract, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAreaCF, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textAreaMFCCCoefficient, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(txtAreaFolderLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton1))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 17, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAreaCSVTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAreaFolderLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(textAreaMFCCCoefficient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAreaCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtAreaCSVTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(btnExtract)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        HalamanUtama hUtama = new HalamanUtama();
        hUtama.setVisible(true);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnExtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtractActionPerformed
        // TODO add your handling code here:
        //Update the parameter (if there's a change)
        SP = jSlider1.getValue() * 0.01;
        EP = (1-SP);
        CF = Integer.valueOf(txtAreaCF.getText());
        koefisienMFCC = Integer.valueOf(textAreaMFCCCoefficient.getText());
        String lokasi = txtAreaFolderLocation.getText();
        String lokasiCSVTarget = txtAreaCSVTarget.getText();
        int FREKUENSI_SAMPLING = 16000;
        /*
        ReadWav readwav = new ReadWav();
        readwav.bacaFile(lokasi);
        readwav.silenceRemoval(readwav.getNilaiSample(), FREKUENSI_SAMPLING);
        */
        //hitungMFCC(lokasi);
        
        
        //lakukan ekstraksi ciri terhadap semua file didalam folder
        File folder = new File(lokasi);
        File[] listOfFiles = folder.listFiles();
        File[] file = listOfFiles;
        double[][] convertArray = new double[listOfFiles.length][CF * koefisienMFCC];
        ArrayManipulator am = new ArrayManipulator();
        CSVWriter csvw = new CSVWriter();
        String COMMA_DELIMITER = ",";
        String NEW_LINE_SEPARATOR = "\n";

        for (int i = 0; i < listOfFiles.length; i++) {
            System.out.println(i+" ================== "+lokasi+" fileName : "+file[i].getName()+" | Path : "+file[i].getAbsolutePath());
            //simpan hasil perhitungan MFCC kedalam file CSV
            // #1 insert the result of MFCC with time alignment to 2dimensional array
//            hitungMFCC(file[i].getAbsolutePath(), CF, SP, EP, koefisienMFCC+1);
            double[] fitur = am.matrixToArray(hitungMFCC(file[i].getAbsolutePath(), CF, SP, EP, koefisienMFCC+1));
            try {
                FileWriter fileWriter = new FileWriter(lokasiCSVTarget,true);
                // #2 save the array into csvFile as 1 dimensional (1 row per 1 data sample)
                for (int j = 0; j < fitur.length; j++) {
                    fileWriter.append(String.valueOf(fitur[j]));
                    fileWriter.append(COMMA_DELIMITER);
                }
                String upTo4Characters = file[i].getName().substring(0, Math.min(file[i].getName().length(), 4));
                String upTo5Characters = file[i].getName().substring(0, Math.min(file[i].getName().length(), 5));
                String upTo6Characters = file[i].getName().substring(0, Math.min(file[i].getName().length(), 6));
                String kelasTarget;
                if (upTo4Characters.equalsIgnoreCase("atas")) {
                    kelasTarget = "atas";
                }else if (upTo5Characters.equalsIgnoreCase("bawah")) {
                    kelasTarget = "bawah";
                }else if (upTo5Characters.equalsIgnoreCase("kanan")) {
                    kelasTarget = "kanan";
                }else if (upTo4Characters.equalsIgnoreCase("kiri")) {
                    kelasTarget = "kiri";
                }else if (upTo4Characters.equalsIgnoreCase("naik")) {
                    kelasTarget = "naik";
                }else if (upTo5Characters.equalsIgnoreCase("turun")) {
                    kelasTarget = "turun";
                }else if (upTo5Characters.equalsIgnoreCase("salin")) {
                    kelasTarget = "salin";
                }else if (upTo6Characters.equalsIgnoreCase("tempel")) {
                    kelasTarget = "tempel";
                }else if (upTo6Characters.equalsIgnoreCase("potong")) {
                    kelasTarget = "potong";
                }else{
                    kelasTarget = "hapus";
                }
                
                jTextArea1.append("Fitur MFCC dari file "+file[i].getName()+" telah didapatkan, termasuk kedalam kategori "+kelasTarget+" ==> "+i+"\n");
                fileWriter.append(kelasTarget);
                fileWriter.append(NEW_LINE_SEPARATOR);
                fileWriter.flush();
                if (i == listOfFiles.length-1) {
                    fileWriter.close();
                }
            } catch (Exception ex) {
                Logger.getLogger(HalamanEkstraksiCiri.class.getName()).log(Level.SEVERE, null, ex);
            }
            // #3 Bingo! you got the MFCC extraction result in CSVFile
        }
    }//GEN-LAST:event_btnExtractActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        SP = jSlider1.getValue() * 0.01;
        EP = (1-SP);
        //CF = Integer.valueOf(txtAreaCF.getText());

        DecimalFormat formatDua = new DecimalFormat("#.##");
        jLabel5.setText(formatDua.format(SP));
        jLabel6.setText(formatDua.format(EP));
    }//GEN-LAST:event_jSlider1StateChanged

    private void btnDetilMFCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetilMFCCActionPerformed
        // TODO add your handling code here:
        DetilMFCC d = new DetilMFCC();
        d.setVisible(true);
    }//GEN-LAST:event_btnDetilMFCCActionPerformed

    private double[][] hitungMFCC(String lokasi, int CF, double SP, double EP, int koefisienMFCC){       
        DecimalFormat formatEmpat = new DecimalFormat("#0.0000"); //format angka
        DecimalFormat formatEnam = new DecimalFormat("#0.000000"); //format angka
        DecimalFormat formatSembilan = new DecimalFormat("#0.000000000"); //format angka
     
        //lakukan pre-processing (sampling)
        ReadWav pre = new ReadWav();
        pre.bacaFile(lokasi); 
        pre.getNilaiSample();        
        
        //output nilai sample
/*
        for (int i = 0; i < pre.getNilaiSample().size(); i++) {            
            System.out.println("("+i+")"+String.valueOf(formatSembilan.format(pre.getNilaiSample().get(i)))+" NILAI SAMPLE AWAL");            
        }                 
*/   
        //silencer
        ArrayList<Double> nonSilence = new ArrayList<>();
        nonSilence = pre.silenceRemoval(pre.getNilaiSample(), 16000);        
        // output hasil silence removal
/*
        for (int i = 0; i < nonSilence.size(); i++) {                        
            System.out.println("("+i+")"+String.valueOf(formatSembilan.format(nonSilence.get(i)))+"\t HASIL SILENCE REMOVAL");
        }         
*/                
        //lakukan Speech processing
        SpeechProcessing sp = new SpeechProcessing();
                       
        
        // DC REMOVAL - PRE EMPHASIS 
        ArrayList<Double> preEmphasisSignal = sp.preEmphasis(sp.dcRemoval(nonSilence));
/*        
        for (int i = 0; i < nonSilence.size(); i++) {
            System.out.println("("+i+")"+String.valueOf(formatSembilan.format(preEmphasisSignal.get(i)))+"\t HASIL DC REMOVAL -> PRE EMPHASIS");
        }
*/
        // FRAME BLOCKING
        //tentukan jumlah frame blocking (frameRate)
        // jika frame sebesar 25 ms = 16 * 25 = 400
        int samplePoint = 16 * 25; 
        int M = samplePoint/2;  //M
        int frameRate = (nonSilence.size() - samplePoint) / M +1; //jumlah frame dalam satu detik
        FeatureExtraction mfcc = new FeatureExtraction(nonSilence.size(),samplePoint,frameRate);        
        mfcc.frameBlocking(preEmphasisSignal);   
      
        //output hasil frame blocking
        int start;
        
        for (int i = 0; i < frameRate; i++) {
            //buat(bagi) frame sebanyak framerate
            start = (samplePoint/2)*i;            
//            System.out.print(String.valueOf(i)+"\t");
            for (int j = start; j < start+samplePoint; j++) {
                if (preEmphasisSignal!=null) {
                    mfcc.frame[i][j-start] = preEmphasisSignal.get(j);
                } else {
                    mfcc.frame[i][j-start] = 0.0;
                }
//                System.out.print(String.valueOf(formatEmpat.format(mfcc.frame[i][j-start]))+"\t");               
            }
//            System.out.println("");
        }
        
        //TIME ALIGNMENT
//        int CF = 5;
//        double SP = 0.06;
//        double EP = 0.94;
        
        SP *= frameRate;
        EP *= frameRate; 
        double step = (Math.round(EP) - Math.floor(SP)) / (CF-1);
        
        System.out.println(Math.round(EP)-Math.round(SP)+" , "+Math.round(EP)+" "+EP+", "+Math.round(SP)+" "+SP+", STEP = "+step);
        //ambil frame tertentu sebanyak CF
        int[] consideredFrame = new int[CF];
        for (int i = 0; i < CF; i++) {
            if (i==0) {
                SP = (int) Math.round(SP);
            }else{
                SP = (int) (Math.round(SP) + Math.floor(step));
            }
            consideredFrame[i] = (int) SP;
            System.out.print(consideredFrame[i]+", ");
        }
        
        
        // WINDOWING
        mfcc.windowing(FeatureExtraction.frame, frameRate, samplePoint);                
/*
        for (int i = 0; i < CF; i++) {
            System.out.print(String.valueOf(i)+"\t");
            for (int j = 0; j < samplePoint; j++) {
                System.out.print(String.valueOf(formatEnam.format(mfcc.windowingSignal[consideredFrame[i]][j]))+"\t");
            }
            System.out.println();
        }     
*/    
        //lakukan Ekstraksi Ciri
        //FFT               
        mfcc.fastFourierTransform(mfcc.windowingSignal, CF, samplePoint);
        mfcc.getMagnitudeSemua();
/*
        for (int i = 0; i < CF; i++) {
            System.out.print(String.valueOf(i)+"\t");
            for (int j = 0; j < samplePoint; j++) {
                System.out.print(String.valueOf(formatEnam.format(mfcc.magnitudeSemua[i][j]))+"\t");
               //System.out.println("FRAME KE"+i+"FFT ke"+j+" = "+mfcc.magnitudeSemua[i][j]);
               //textareaFFT.append(i+"-"+j+"\t");
            }
            System.out.println("");
        }
*/      
        //mel-filterbank
        //mfcc.filterbank(mfcc.magnitudeSemua, 22);
        // framerate = jumlah frame yang ada
        // samplePoint = jumlah point(sample dalam 1 frame)
        mfcc.filterbank(mfcc.getMagnitudeSemua(),1000,CF,samplePoint); 
/*
        for (int i = 0; i < CF; i++) {
            System.out.print(String.valueOf(i)+"\t");
            for (int j = 0; j < samplePoint; j++) {               
                System.out.print(String.valueOf(formatEmpat.format(mfcc.melFreqEnergy[i][j]))+"\t");
            }
            System.out.println();
        }
*/      

        //DCT
        mfcc.discreteCosineTransform(mfcc.melFreqEnergy, CF, samplePoint, koefisienMFCC);
        System.out.println(mfcc.dctCepstrum.length+" "+mfcc.dctCepstrum[0].length);

        for (int i = 0; i < mfcc.dctCepstrum.length; i++) {
            System.out.print(String.valueOf(i)+"\t");
            for (int j = 0; j < mfcc.dctCepstrum[0].length; j++) {               
                System.out.print(String.valueOf(formatEmpat.format(mfcc.dctCepstrum[i][j]))+"\t");
            }
            System.out.println();
        }

                
        //normalisasi
        double[][] hasil = mfcc.normalisasiDanThresholding();
        for (int i = 0; i < hasil.length; i++) {
            System.out.print(String.valueOf(i)+"\t");            
            for (int j = 0; j < hasil[0].length; j++) {
                System.out.print(String.valueOf(hasil[i][j])+" \t");
            }
            System.out.println("");
        }
        
        //return mfcc.normalisasiMFCC;
        return hasil;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HalamanEkstraksiCiri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HalamanEkstraksiCiri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HalamanEkstraksiCiri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HalamanEkstraksiCiri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HalamanEkstraksiCiri().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetilMFCC;
    private javax.swing.JButton btnExtract;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField textAreaMFCCCoefficient;
    private javax.swing.JTextField txtAreaCF;
    private javax.swing.JTextField txtAreaCSVTarget;
    private javax.swing.JTextField txtAreaFolderLocation;
    // End of variables declaration//GEN-END:variables
}
